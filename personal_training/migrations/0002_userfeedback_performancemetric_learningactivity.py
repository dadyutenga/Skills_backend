# Generated by Django 5.1.4 on 2024-12-28 22:18

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Oauth', '0002_user_age_user_specialization'),
        ('personal_training', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completion_rate', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('engagement_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('progress_velocity', models.FloatField(default=0)),
                ('preferred_learning_style', models.CharField(default='visual', max_length=50)),
                ('content_interaction_time', models.JSONField(default=dict)),
                ('strength_areas', models.JSONField(default=list)),
                ('challenge_areas', models.JSONField(default=list)),
                ('quiz_results', models.JSONField(default=dict)),
                ('average_quiz_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('last_activity_date', models.DateTimeField(auto_now=True)),
                ('total_time_spent', models.PositiveIntegerField(default=0)),
                ('login_frequency', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_feedbacks', to='personal_training.course')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_feedbacks', to='personal_training.module')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='Oauth.user')),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('user', 'course', 'module')},
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(max_length=50)),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='personal_training.userfeedback')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LearningActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(max_length=50)),
                ('content_type', models.CharField(max_length=50)),
                ('duration', models.PositiveIntegerField(default=0)),
                ('metadata', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_activities', to='personal_training.userfeedback')),
            ],
            options={
                'verbose_name_plural': 'Learning Activities',
                'ordering': ['-timestamp'],
            },
        ),
    ]
